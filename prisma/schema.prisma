generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId      Int     @id @default(autoincrement()) @map("userId")
  username    String  @map("username")
  password    String  @map("password")
  email       String @unique @map("email")
  profileImg  String?  @map("profileImg")

  createdAt   DateTime  @default(now()) @map("createdAt")
  updatedAt   DateTime  @updatedAt  @map("updatedAt")

  diarylike DiaryLikes[]
  diary     diaries[]
  comment   comments[]
  @@map("Users")
}

model diaries {
  diaryId     Int   @id @default(autoincrement()) @map("diaryId")
  UserId      Int   @map("UserId")
  EmotionStatus   Int   @map("EmotionalStatus")
  image       String?  @map("image")
  content     String  @map("content")
  isPublic    Boolean @default(false) @map("isPublic")
  likeCount Int @default(0) @map("likeCount")

  createdAt   DateTime  @default(now()) @map("createdAt")
  updatedAt   DateTime  @updatedAt  @map("updatedAt")
  deletedAt   DateTime? @map("deletedAt")
  
  diarylike DiaryLikes[]
  comment     comments[]
  
  User        Users     @relation(fields: [UserId], references: [userId], onDelete: Cascade)
  @@map("diaries")
}

model comments {
  commentId      Int   @id   @default(autoincrement()) @map("commentId")
  DiaryId        Int   @map("DiaryId")
  UserId         Int   @map("UserId")
  content        String  @map("content")
  isEdited      Boolean @default(false) @map("isEdited")
  
  createdAt      DateTime   @default(now()) @map("createdAt")
  updatedAt      DateTime   @updatedAt      @map("updatedAt")
  deletedAt      DateTime?  @map("deletedAt")
  
  User         Users        @relation(fields: [UserId], references: [userId], onDelete: Cascade)
  diary        diaries      @relation(fields: [DiaryId], references: [diaryId], onDelete: Cascade)
  @@map("comments") 
}

model DiaryLikes {
  diarylikeId Int @id @default(autoincrement()) @map("diarylikeId")
  UserId Int @map("UserId")
  DiaryId Int @map("DiaryId")
  
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  User Users @relation(fields: [UserId], references: [userId], onDelete: Cascade)
  Diary diaries @relation(fields: [DiaryId], references: [diaryId], onDelete: Cascade)

  @@map("DiaryLikes")
}